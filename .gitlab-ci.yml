stages:
  - pre
  - lint
  - test
  - ui-test

variables:
  MAIN_BRANCH: "master"
  DEVELOP_BRANCH: "develop"

default:
  tags:
    - macos:sonoma
    - specific:true

# ┌───────────────┐
# │ Utility jobs: │
# └───────────────┘

.run:always-on-default-branches:
  rules:
    - if: '$CI_COMMIT_BRANCH == $MAIN_BRANCH || $CI_COMMIT_BRANCH == $DEVELOP_BRANCH'
      when: always

.run:on-sdk-changes:
  rules:
    - changes: # on changes to these files for other branches
        - "Datadog*/**/*"
        - "IntegrationTests/**/*"
        - "TestUtilities/**/*"
        - "*.yml"

ENV check:
  stage: pre
  script:
    - ./tools/runner-setup.sh --ios # temporary, waiting for AMI
    - make env-check

# ┌──────────────────────────┐
# │ SDK changes integration: │
# └──────────────────────────┘

Lint:
  stage: lint
  rules: 
    - !reference [.run:always-on-default-branches, rules]
    - !reference [.run:on-sdk-changes, rules]
  script:
    - ./tools/runner-setup.sh --ios # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    - make lint license-check
    - make rum-models-verify sr-models-verify

Unit Tests (iOS):
  stage: test
  rules: 
    - !reference [.run:always-on-default-branches, rules]
    - !reference [.run:on-sdk-changes, rules]
  variables:
    OS: "latest"
    PLATFORM: "iOS Simulator"
    DEVICE: "iPhone 15 Pro"
  script:
    - ./tools/runner-setup.sh --ios # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    - make test-ios-all OS="$OS" PLATFORM="$PLATFORM" DEVICE="$DEVICE"

Unit Tests (tvOS):
  stage: test
  rules: 
    - !reference [.run:always-on-default-branches, rules]
    - !reference [.run:on-sdk-changes, rules]
  variables:
    OS: "latest"
    PLATFORM: "tvOS Simulator"
    DEVICE: "Apple TV"
  script:
    - ./tools/runner-setup.sh --tvos # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    - make test-tvos-all OS="$OS" PLATFORM="$PLATFORM" DEVICE="$DEVICE"

UI Tests:
  stage: ui-test
  rules: 
    - !reference [.run:always-on-default-branches, rules]
    - !reference [.run:on-sdk-changes, rules]
  variables:
    OS: "latest"
    PLATFORM: "iOS Simulator"
    DEVICE: "iPhone 15 Pro"
  parallel:
    matrix:
      - TEST_PLAN:
          - Default
          - RUM
          - CrashReporting
          - NetworkInstrumentation
  script:
    - ./tools/runner-setup.sh --ios # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    - make ui-test TEST_PLAN="$TEST_PLAN" OS="$OS" PLATFORM="$PLATFORM" DEVICE="$DEVICE"
