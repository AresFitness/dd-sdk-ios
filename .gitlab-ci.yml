stages:
  - pre
  - lint
  - test
  - ui-test
  - smoke-test

variables:
  MAIN_BRANCH: "master"
  DEVELOP_BRANCH: "develop"

default:
  tags:
    - macos:sonoma
    - specific:true

# ┌───────────────┐
# │ Utility jobs: │
# └───────────────┘

# Trigger jobs on 'develop' and 'master' branches
.run:when-develop-or-master:
  rules:
    - if: '$CI_COMMIT_BRANCH == $DEVELOP_BRANCH || $CI_COMMIT_BRANCH == $MAIN_BRANCH'
      when: always

# Trigger jobs on SDK code changes, comparing against 'develop' branch
.run:if-sdk-modified:
  rules:
    - changes:
        paths:
          - "Datadog*/**/*"
          - "IntegrationTests/**/*"
          - "TestUtilities/**/*"
          - "*" # match any file in the root directory
        compare_to: 'develop' # cannot use variable due to: https://gitlab.com/gitlab-org/gitlab/-/issues/369916

# Trigger jobs on changes in `tools/*`, comparing against 'develop' branch
.run:if-tools-modified:
  rules:
    - changes:
        paths:
          - "tools/**/*"
          - "Makefile"
          - ".gitlab-ci.yml"
        compare_to: 'develop'

ENV check:
  stage: pre
  script:
    - make env-check

# ┌──────────────────────────┐
# │ SDK changes integration: │
# └──────────────────────────┘

.Lint:
  stage: lint
  rules: 
    - !reference [.run:when-develop-or-master, rules]
    - !reference [.run:if-sdk-modified, rules]
  script:
    - make clean repo-setup ENV=ci
    - make lint license-check
    - make rum-models-verify sr-models-verify

.Unit Tests (iOS):
  stage: test
  rules: 
    - !reference [.run:when-develop-or-master, rules]
    - !reference [.run:if-sdk-modified, rules]
  variables:
    XCODE: "15.3.0"
    OS: "17.4"
    PLATFORM: "iOS Simulator"
    DEVICE: "iPhone 15 Pro"
  script:
    - ./tools/runner-setup.sh --xcode "$XCODE" --iOS --os "$OS" # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    - make test-ios-all OS="$OS" PLATFORM="$PLATFORM" DEVICE="$DEVICE"

.Unit Tests (tvOS):
  stage: test
  rules: 
    - !reference [.run:when-develop-or-master, rules]
    - !reference [.run:if-sdk-modified, rules]
  variables:
    XCODE: "15.3.0"
    OS: "17.4"
    PLATFORM: "tvOS Simulator"
    DEVICE: "Apple TV"
  script:
    - ./tools/runner-setup.sh --xcode "$XCODE" --tvOS --os "$OS" # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    - make test-tvos-all OS="$OS" PLATFORM="$PLATFORM" DEVICE="$DEVICE"

.UI Tests:
  stage: ui-test
  rules: 
    - !reference [.run:when-develop-or-master, rules]
    - !reference [.run:if-sdk-modified, rules]
  variables:
    XCODE: "15.3.0"
    OS: "17.4"
    PLATFORM: "iOS Simulator"
    DEVICE: "iPhone 15 Pro"
  parallel:
    matrix:
      - TEST_PLAN:
          - Default
          - RUM
          - CrashReporting
          - NetworkInstrumentation
  script:
    - ./tools/runner-setup.sh --xcode "$XCODE" --iOS --os "$OS" # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    - make ui-test TEST_PLAN="$TEST_PLAN" OS="$OS" PLATFORM="$PLATFORM" DEVICE="$DEVICE"

.Tools Tests:
  stage: test
  rules: 
    - !reference [.run:when-develop-or-master, rules]
    - !reference [.run:if-tools-modified, rules]
  script:
    - make clean repo-setup ENV=ci
    - make tools-test

Smoke Tests (iOS):
  stage: smoke-test
  tags:
    - macos:ventura
    - specific:true
  variables:
    XCODE: "15.2.0"
    OS: "17.2"
    PLATFORM: "iOS Simulator"
    DEVICE: "iPhone 15 Pro"
  script:
    - ./tools/runner-setup.sh --xcode "$XCODE" --iOS --os "$OS" # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    # - make spm-build-ios
    - make smoke-test-ios-all OS="$OS" PLATFORM="$PLATFORM" DEVICE="$DEVICE"

Smoke Tests (tvOS):
  stage: smoke-test
  tags:
    - macos:ventura
    - specific:true
  variables:
    XCODE: "15.2.0"
    OS: "17.2"
    PLATFORM: "tvOS Simulator"
    DEVICE: "Apple TV"
  script:
    - ./tools/runner-setup.sh --xcode "$XCODE" --tvOS --os "$OS" # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    # - make spm-build-tvos
    - make smoke-test-tvos-all OS="$OS" PLATFORM="$PLATFORM" DEVICE="$DEVICE"
    
.Smoke Tests (visionOS):
  stage: smoke-test
  tags:
    - macos:ventura
    - specific:true
  variables:
    XCODE: "15.2.0"
    OS: "1.0"
  script:
    - ./tools/runner-setup.sh --xcode "$XCODE" --visionOS --os "$OS" # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    - make spm-build-visionos

.Smoke Tests (macOS):
  stage: smoke-test
  tags:
    - macos:ventura
    - specific:true
  variables:
    XCODE: "15.2.0"
  script:
    - ./tools/runner-setup.sh --xcode "$XCODE" # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    - make spm-build-macos
