stages:
  - pre
  - lint
  - test
  - ui-test

ENV check:
  stage: pre
  tags:
    - macos:sonoma
    - specific:true
  script:
    - ./tools/runner-setup.sh --ios # temporary, waiting for AMI
    - make env-check

Lint:
  stage: lint
  tags:
    - macos:sonoma
    - specific:true
  script:
    - ./tools/runner-setup.sh --ios # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    - make lint license-check
    - make rum-models-verify sr-models-verify

Unit Tests (iOS):
  stage: test
  tags:
    - macos:sonoma
    - specific:true
  variables:
    OS: "latest"
    PLATFORM: "iOS Simulator"
    DEVICE: "iPhone 15 Pro"
  script:
    - ./tools/runner-setup.sh --ios # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    - make test-ios-all OS="$OS" PLATFORM="$PLATFORM" DEVICE="$DEVICE"

Unit Tests (tvOS):
  stage: test
  tags:
    - macos:sonoma
    - specific:true
  variables:
    OS: "latest"
    PLATFORM: "tvOS Simulator"
    DEVICE: "Apple TV"
  script:
    - ./tools/runner-setup.sh --tvos # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    - make test-tvos-all OS="$OS" PLATFORM="$PLATFORM" DEVICE="$DEVICE"

UI Tests:
  stage: ui-test
  tags:
    - macos:sonoma
    - specific:true
  variables:
    OS: "latest"
    PLATFORM: "iOS Simulator"
    DEVICE: "iPhone 15 Pro"
  parallel:
    matrix:
      - TEST_PLAN:
          - Default
          - RUM
          - CrashReporting
          - NetworkInstrumentation
  script:
    - ./tools/runner-setup.sh --ios # temporary, waiting for AMI
    - make clean repo-setup ENV=ci
    - make ui-test TEST_PLAN="$TEST_PLAN" OS="$OS" PLATFORM="$PLATFORM" DEVICE="$DEVICE"
