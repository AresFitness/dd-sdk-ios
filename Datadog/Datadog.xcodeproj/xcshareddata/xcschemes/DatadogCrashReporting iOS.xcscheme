<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1410"
   version = "1.3">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "61B7885325C180CB002675B5"
               BuildableName = "DatadogCrashReporting.framework"
               BlueprintName = "DatadogCrashReporting iOS"
               ReferencedContainer = "container:Datadog.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "NO"
      enableThreadSanitizer = "YES"
      codeCoverageEnabled = "YES"
      onlyGenerateCoverageForSpecifiedTargets = "YES">
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "61B7885325C180CB002675B5"
            BuildableName = "DatadogCrashReporting.framework"
            BlueprintName = "DatadogCrashReporting iOS"
            ReferencedContainer = "container:Datadog.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
      <CommandLineArguments>
         <CommandLineArgument
            argument = "IS_RUNNING_UNIT_TESTS"
            isEnabled = "YES">
         </CommandLineArgument>
      </CommandLineArguments>
      <EnvironmentVariables>
         <EnvironmentVariable
            key = "DD_TEST_RUNNER"
            value = "$(DD_TEST_RUNNER)"
            isEnabled = "YES">
         </EnvironmentVariable>
         <EnvironmentVariable
            key = "DD_API_KEY"
            value = "$(DD_API_KEY)"
            isEnabled = "YES">
         </EnvironmentVariable>
         <EnvironmentVariable
            key = "DD_ENV"
            value = "$(DD_ENV)"
            isEnabled = "YES">
         </EnvironmentVariable>
         <EnvironmentVariable
            key = "DD_SERVICE"
            value = "$(DD_SERVICE)"
            isEnabled = "YES">
         </EnvironmentVariable>
         <EnvironmentVariable
            key = "SRCROOT"
            value = "$(SRCROOT)"
            isEnabled = "YES">
         </EnvironmentVariable>
         <EnvironmentVariable
            key = "DD_ENABLE_STDOUT_INSTRUMENTATION"
            value = "$(DD_ENABLE_STDOUT_INSTRUMENTATION)"
            isEnabled = "YES">
         </EnvironmentVariable>
         <EnvironmentVariable
            key = "DD_ENABLE_STDERR_INSTRUMENTATION"
            value = "$(DD_ENABLE_STDERR_INSTRUMENTATION)"
            isEnabled = "YES">
         </EnvironmentVariable>
         <EnvironmentVariable
            key = "DD_DISABLE_NETWORK_INSTRUMENTATION"
            value = "$(DD_DISABLE_NETWORK_INSTRUMENTATION)"
            isEnabled = "YES">
         </EnvironmentVariable>
         <EnvironmentVariable
            key = "DD_DISABLE_RUM_INTEGRATION"
            value = "$(DD_DISABLE_RUM_INTEGRATION)"
            isEnabled = "YES">
         </EnvironmentVariable>
         <EnvironmentVariable
            key = "DD_DISABLE_SOURCE_LOCATION"
            value = "$(DD_DISABLE_SOURCE_LOCATION)"
            isEnabled = "YES">
         </EnvironmentVariable>
         <EnvironmentVariable
            key = "DD_DISABLE_CRASH_HANDLER"
            value = "$(DD_DISABLE_CRASH_HANDLER)"
            isEnabled = "YES">
         </EnvironmentVariable>
         <EnvironmentVariable
            key = "DD_GIT_REPOSITORY_URL"
            value = "$(DD_GIT_REPOSITORY_URL)"
            isEnabled = "YES">
         </EnvironmentVariable>
      </EnvironmentVariables>
      <CodeCoverageTargets>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "61B7885325C180CB002675B5"
            BuildableName = "DatadogCrashReporting.framework"
            BlueprintName = "DatadogCrashReporting iOS"
            ReferencedContainer = "container:Datadog.xcodeproj">
         </BuildableReference>
      </CodeCoverageTargets>
      <Testables>
         <TestableReference
            skipped = "NO">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "61B7885B25C180CB002675B5"
               BuildableName = "DatadogCrashReportingTests iOS.xctest"
               BlueprintName = "DatadogCrashReportingTests iOS"
               ReferencedContainer = "container:Datadog.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "61B7885325C180CB002675B5"
            BuildableName = "DatadogCrashReporting.framework"
            BlueprintName = "DatadogCrashReporting iOS"
            ReferencedContainer = "container:Datadog.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
</Scheme>
